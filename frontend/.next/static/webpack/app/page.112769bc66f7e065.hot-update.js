"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/Crossword/crosswordpage.jsx":
/*!*****************************************!*\
  !*** ./app/Crossword/crosswordpage.jsx ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CrosswordPuzzlePage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction CrosswordPuzzlePage(param) {\n    let { screenWidth, onBack, puzzleSet, t } = param;\n    _s();\n    const [puzzleTitle, setPuzzleTitle] = react__WEBPACK_IMPORTED_MODULE_1___default().useState(\"\");\n    const [qnaList, setQnaList] = react__WEBPACK_IMPORTED_MODULE_1___default().useState([]);\n    const [hoverRow, setHoverRow] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [hoverCol, setHoverCol] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isDragging, setIsDragging] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [dragStart, setDragStart] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const [hoveredClueNumber, setHoveredClueNumber] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [hoveredDirection, setHoveredDirection] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [cellStatus, setCellStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [scale, setScale] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(screenWidth <= 480 ? 1.33 : 1);\n    const [translate, setTranslate] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const [startPan, setStartPan] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Get clue number for a specific grid cell\n    const getClueNumber = (row, col)=>{\n        const match = placedWords.find((entry)=>{\n            if (!entry || !entry.start) return false;\n            return entry.start.row === row && entry.start.col === col;\n        });\n        var _match_clueNumber;\n        return (_match_clueNumber = match === null || match === void 0 ? void 0 : match.clueNumber) !== null && _match_clueNumber !== void 0 ? _match_clueNumber : null;\n    };\n    const handleInputChange = (value, row, col)=>{\n        setUserGrid((prev)=>{\n            const updated = [\n                ...prev.map((r)=>[\n                        ...r\n                    ])\n            ];\n            updated[row][col] = value;\n            return updated;\n        });\n    };\n    const checkAnswers = ()=>{\n        const statusMap = {};\n        const newUserGrid = [\n            ...userGrid.map((r)=>[\n                    ...r\n                ])\n        ];\n        for(let row = 0; row < grid.length; row++){\n            for(let col = 0; col < grid[row].length; col++){\n                var _userGrid_row;\n                const expected = grid[row][col];\n                const actual = (_userGrid_row = userGrid[row]) === null || _userGrid_row === void 0 ? void 0 : _userGrid_row[col];\n                if (expected) {\n                    const key = \"\".concat(row, \"-\").concat(col);\n                    if (actual === expected) {\n                        statusMap[key] = \"correct\";\n                    } else {\n                        statusMap[key] = \"incorrect\";\n                    }\n                }\n            }\n        }\n        setCellStatus(statusMap);\n        // After 2 seconds: clear wrong answers and remove incorrect highlights\n        setTimeout(()=>{\n            const updatedGrid = [\n                ...userGrid.map((r)=>[\n                        ...r\n                    ])\n            ];\n            Object.entries(statusMap).forEach((param)=>{\n                let [key, value] = param;\n                if (value === \"incorrect\") {\n                    const [r, c] = key.split(\"-\").map(Number);\n                    updatedGrid[r][c] = \"\";\n                }\n            });\n            setUserGrid(updatedGrid);\n            setCellStatus({});\n        }, 2000);\n    };\n    const [grid, setGrid] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [placedWords, setPlacedWords] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const containerRef = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(null);\n    const [userGrid, setUserGrid] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const inputRefs = react__WEBPACK_IMPORTED_MODULE_1___default().useRef({});\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CrosswordPuzzlePage.useEffect\": ()=>{\n            if (!puzzleSet) return;\n            const qnaList = puzzleSet.terms.map({\n                \"CrosswordPuzzlePage.useEffect.qnaList\": (termObj)=>({\n                        question: termObj.definition,\n                        answer: termObj.term.toUpperCase().replace(/\\s+/g, \"\")\n                    })\n            }[\"CrosswordPuzzlePage.useEffect.qnaList\"]);\n            setQnaList(qnaList); // ✅ THIS LINE IS MISSING\n            setPuzzleTitle(puzzleSet.title || \"My Puzzle\");\n            const generate = {\n                \"CrosswordPuzzlePage.useEffect.generate\": async ()=>{\n                    setIsLoading(true);\n                    const res = await fetch(\"/api/generate-puzzle\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            qnaList\n                        })\n                    });\n                    const data = await res.json();\n                    setGrid(data.grid);\n                    setPlacedWords(data.placedWords);\n                    const emptyGrid = data.grid.map({\n                        \"CrosswordPuzzlePage.useEffect.generate.emptyGrid\": (row)=>row.map({\n                                \"CrosswordPuzzlePage.useEffect.generate.emptyGrid\": (cell)=>cell ? \"\" : null\n                            }[\"CrosswordPuzzlePage.useEffect.generate.emptyGrid\"])\n                    }[\"CrosswordPuzzlePage.useEffect.generate.emptyGrid\"]);\n                    setUserGrid(emptyGrid);\n                    setIsLoading(false);\n                    if (screenWidth <= 480) {\n                        setScale(1.33); // ensure puzzle scale is good for mobile input\n                    }\n                    // 📦 Auto scroll to center\n                    if (containerRef.current) {\n                        const container = containerRef.current;\n                        setTimeout({\n                            \"CrosswordPuzzlePage.useEffect.generate\": ()=>{\n                                container.scrollLeft = container.scrollWidth / 2 - container.clientWidth / 2;\n                                container.scrollTop = container.scrollHeight / 2 - container.clientHeight / 2;\n                            }\n                        }[\"CrosswordPuzzlePage.useEffect.generate\"], 50);\n                    }\n                }\n            }[\"CrosswordPuzzlePage.useEffect.generate\"];\n            generate();\n        }\n    }[\"CrosswordPuzzlePage.useEffect\"], [\n        puzzleSet\n    ]);\n    const handleWheel = (e)=>{\n        var _containerRef_current;\n        if ((_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.contains(e.target)) {\n            e.preventDefault(); // ⛔ stop page scroll\n            const zoomAmount = e.deltaY < 0 ? 0.1 : -0.1;\n            setScale((prev)=>Math.min(Math.max(prev + zoomAmount, 0.5), 2));\n        }\n    };\n    const handlePanStart = (e)=>{\n        setStartPan({\n            x: e.clientX || e.touches[0].clientX,\n            y: e.clientY || e.touches[0].clientY\n        });\n    };\n    const handlePanMove = (e)=>{\n        if (!startPan) return;\n        const currentX = e.clientX || e.touches[0].clientX;\n        const currentY = e.clientY || e.touches[0].clientY;\n        const dx = currentX - startPan.x;\n        const dy = currentY - startPan.y;\n        setTranslate((prev)=>({\n                x: prev.x + dx,\n                y: prev.y + dy\n            }));\n        setStartPan({\n            x: currentX,\n            y: currentY\n        });\n    };\n    const handlePanEnd = ()=>{\n        setStartPan(null);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CrosswordPuzzlePage.useEffect\": ()=>{\n            const wheelHandler = {\n                \"CrosswordPuzzlePage.useEffect.wheelHandler\": (e)=>{\n                    var _containerRef_current;\n                    if ((_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.contains(e.target)) {\n                        e.preventDefault();\n                    }\n                }\n            }[\"CrosswordPuzzlePage.useEffect.wheelHandler\"];\n            window.addEventListener(\"wheel\", wheelHandler, {\n                passive: false\n            });\n            return ({\n                \"CrosswordPuzzlePage.useEffect\": ()=>{\n                    window.removeEventListener(\"wheel\", wheelHandler);\n                }\n            })[\"CrosswordPuzzlePage.useEffect\"];\n        }\n    }[\"CrosswordPuzzlePage.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"text-white font-[Itim]\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-between items-center py-5 \".concat(screenWidth <= 770 ? \"w-full\" : \"w-[60%] ml-0\"),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-3xl font-semibold text-left text-[#ff7700] drop-shadow-[0_0_8px_#ff7700]\",\n                        children: puzzleSet.title\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                        lineNumber: 169,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"mb-4 px-4 py-2 justify-end rounded border border-white text-white transition duration-300    hover:bg-white hover:text-black shadow-md hover:shadow-[0_0_12px_white]\",\n                        onClick: onBack,\n                        children: t.backbtn\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                        lineNumber: 173,\n                        columnNumber: 17\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                lineNumber: 168,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-col gap-2 mb-2 border-2 border-[#00e0ff] p-2 rounded-3xl \".concat(screenWidth <= 770 ? \"w-full px-4\" : \"w-[60%]\"),\n                children: [\n                    isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex justify-center items-center h-[200px]\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"animate-spin rounded-full h-12 w-12 border-t-4 border-b-4 border-[#00e0ff]\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                            lineNumber: 188,\n                            columnNumber: 25\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                        lineNumber: 187,\n                        columnNumber: 21\n                    }, this),\n                    (()=>{\n                        if (!grid.length || !placedWords.length) return null;\n                        // Inline highlight calculation\n                        const highlighted = (()=>{\n                            if (hoverRow === null || hoverCol === null) return [];\n                            const results = [];\n                            placedWords.forEach((word)=>{\n                                if (!(word === null || word === void 0 ? void 0 : word.start) || !(word === null || word === void 0 ? void 0 : word.answer)) {\n                                    return;\n                                }\n                                const { start, direction, answer } = word;\n                                const len = answer.length;\n                                const matches = placedWords.filter((param)=>{\n                                    let { start, direction, answer } = param;\n                                    if (!start || !answer) return false;\n                                    if (direction === \"across\") {\n                                        return hoverRow === start.row && hoverCol >= start.col && hoverCol < start.col + answer.length;\n                                    } else {\n                                        return hoverCol === start.col && hoverRow >= start.row && hoverRow < start.row + answer.length;\n                                    }\n                                });\n                                if (matches.length > 0) {\n                                    // Find the one with shortest distance to the clue origin\n                                    let closest = matches[0];\n                                    let closestDistance = Infinity;\n                                    for (let word of matches){\n                                        const dist = Math.abs(hoverRow - word.start.row) + Math.abs(hoverCol - word.start.col);\n                                        if (dist < closestDistance || dist === closestDistance && word.answer.length < closest.answer.length // 👈 Tie-breaker\n                                        ) {\n                                            closest = word;\n                                            closestDistance = dist;\n                                        }\n                                    }\n                                    // Highlight only this word\n                                    const { start, direction, answer } = closest;\n                                    for(let i = 0; i < answer.length; i++){\n                                        const r = direction === \"across\" ? start.row : start.row + i;\n                                        const c = direction === \"across\" ? start.col + i : start.col;\n                                        results.push(\"\".concat(r, \"-\").concat(c));\n                                    }\n                                }\n                            });\n                            return results;\n                        })();\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                ref: containerRef,\n                                onWheel: handleWheel,\n                                onMouseDown: handlePanStart,\n                                onMouseMove: handlePanMove,\n                                onMouseUp: handlePanEnd,\n                                onMouseLeave: handlePanEnd,\n                                onTouchStart: handlePanStart,\n                                onTouchMove: handlePanMove,\n                                onTouchEnd: handlePanEnd,\n                                className: \"rounded-2xl\",\n                                style: {\n                                    overflow: \"auto\",\n                                    WebkitOverflowScrolling: \"touch\",\n                                    touchAction: \"pinch-zoom\",\n                                    width: \"100%\",\n                                    height: \"420px\",\n                                    border: \"1px solid #00e0ff\",\n                                    position: \"relative\",\n                                    cursor: startPan ? \"grabbing\" : \"grab\",\n                                    scrollbarWidth: \"none\",\n                                    msOverflowStyle: \"none\"\n                                },\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        transform: \"translate(\".concat(translate.x, \"px, \").concat(translate.y, \"px) scale(\").concat(scale, \")\"),\n                                        transformOrigin: \"top left\",\n                                        transition: \"transform 0.05s ease-out\",\n                                        display: \"inline-block\"\n                                    },\n                                    children: grid.map((rowArray, row)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex gap-px\",\n                                            children: rowArray.map((cell, col)=>{\n                                                var _userGrid_row;\n                                                const clueNum = getClueNumber(row, col);\n                                                return cell ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    onMouseEnter: ()=>{\n                                                        setHoverRow(row);\n                                                        setHoverCol(col);\n                                                        const targetKey = highlighted.find((key)=>key === \"\".concat(row, \"-\").concat(col));\n                                                        if (targetKey && inputRefs.current[targetKey]) {\n                                                            setTimeout(()=>{\n                                                                inputRefs.current[targetKey].focus();\n                                                            }, 10);\n                                                        }\n                                                        // ✅ Find clue number for this cell\n                                                        const matches = placedWords.filter((word)=>{\n                                                            if (!(word === null || word === void 0 ? void 0 : word.start) || !(word === null || word === void 0 ? void 0 : word.answer)) return false;\n                                                            const { start, direction, answer } = word;\n                                                            const len = answer.length;\n                                                            if (direction === \"across\" && start.row === row && col >= start.col && col < start.col + len || direction === \"down\" && start.col === col && row >= start.row && row < start.row + len) {\n                                                                return true;\n                                                            }\n                                                            return false;\n                                                        });\n                                                        let matchedWord = null;\n                                                        let closestDistance = Infinity;\n                                                        for (let word of matches){\n                                                            const dist = Math.abs(row - word.start.row) + Math.abs(col - word.start.col);\n                                                            if (dist < closestDistance) {\n                                                                matchedWord = word;\n                                                                closestDistance = dist;\n                                                            }\n                                                        }\n                                                        setHoveredClueNumber((matchedWord === null || matchedWord === void 0 ? void 0 : matchedWord.clueNumber) || null); // ✅ set hovered clue number\n                                                        setHoveredDirection((matchedWord === null || matchedWord === void 0 ? void 0 : matchedWord.direction) || null);\n                                                    },\n                                                    onMouseLeave: ()=>{\n                                                        setHoverRow(null);\n                                                        setHoverCol(null);\n                                                        setHoveredClueNumber(null); // ✅ clear it\n                                                        setHoveredDirection(null);\n                                                    },\n                                                    className: \"relative z-20 w-6 h-6 rounded-sm flex items-center justify-center text-xs transition-all duration-100\\n                                                            \".concat(highlighted.includes(\"\".concat(row, \"-\").concat(col)) ? 'bg-black text-[#ff7700] border-2 border-[#ff7700] shadow-[0_0_20px_#ff7700]' : cellStatus[\"\".concat(row, \"-\").concat(col)] === \"correct\" ? 'bg-[#052d1b] text-[#00ff88] border-2 border-[#00ff88] shadow-[0_0_10px_#00ff88]' : cellStatus[\"\".concat(row, \"-\").concat(col)] === \"incorrect\" ? 'bg-[#330a0a] text-[#ff0033] border-2 border-[#ff0033] shadow-[0_0_10px_#ff0033]' : 'bg-black text-[#00e0ff] border-2 border-[#00e0ff] shadow-[0_0_20px_#00e0ff]'),\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                            ref: (el)=>{\n                                                                if (el) inputRefs.current[\"\".concat(row, \"-\").concat(col)] = el;\n                                                            },\n                                                            type: \"text\",\n                                                            maxLength: 1,\n                                                            value: ((_userGrid_row = userGrid[row]) === null || _userGrid_row === void 0 ? void 0 : _userGrid_row[col]) || \"\",\n                                                            onChange: (e)=>{\n                                                                const val = e.target.value.toUpperCase();\n                                                                handleInputChange(val, row, col);\n                                                                if (val && highlighted.length > 0) {\n                                                                    let currentIndex = highlighted.findIndex((cell)=>cell === \"\".concat(row, \"-\").concat(col));\n                                                                    // 🔁 Look for the next empty cell in the highlight path\n                                                                    for(let i = currentIndex + 1; i < highlighted.length; i++){\n                                                                        const [nextRow, nextCol] = highlighted[i].split(\"-\").map(Number);\n                                                                        if (!userGrid[nextRow][nextCol]) {\n                                                                            const nextKey = \"\".concat(nextRow, \"-\").concat(nextCol);\n                                                                            if (inputRefs.current[nextKey]) {\n                                                                                setTimeout(()=>{\n                                                                                    inputRefs.current[nextKey].focus();\n                                                                                }, 10);\n                                                                            }\n                                                                            break;\n                                                                        }\n                                                                    }\n                                                                }\n                                                            },\n                                                            onKeyDown: (e)=>{\n                                                                if (e.key === \"Backspace\" && !userGrid[row][col]) {\n                                                                    const currentIndex = highlighted.findIndex((cell)=>cell === \"\".concat(row, \"-\").concat(col));\n                                                                    const prevKey = highlighted[currentIndex - 1];\n                                                                    if (prevKey && inputRefs.current[prevKey]) {\n                                                                        setTimeout(()=>{\n                                                                            inputRefs.current[prevKey].focus();\n                                                                        }, 10);\n                                                                    }\n                                                                }\n                                                            },\n                                                            className: \"w-full h-full text-center bg-transparent outline-none z-10 \".concat(screenWidth <= 480 ? \"text-[16px]\" : \"text-xs\")\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                                            lineNumber: 359,\n                                                            columnNumber: 57\n                                                        }, this),\n                                                        clueNum && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"absolute top-[1px] left-[1px] text-[8px] text-yellow font-bold z-20 leading-none\",\n                                                            children: clueNum\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                                            lineNumber: 404,\n                                                            columnNumber: 61\n                                                        }, this)\n                                                    ]\n                                                }, \"\".concat(row, \"-\").concat(col), true, {\n                                                    fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                                    lineNumber: 291,\n                                                    columnNumber: 53\n                                                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"w-6 h-6\"\n                                                }, \"\".concat(row, \"-\").concat(col), false, {\n                                                    fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                                    lineNumber: 411,\n                                                    columnNumber: 53\n                                                }, this);\n                                            })\n                                        }, row, false, {\n                                            fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                            lineNumber: 286,\n                                            columnNumber: 41\n                                        }, this))\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                    lineNumber: 277,\n                                    columnNumber: 33\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                lineNumber: 251,\n                                columnNumber: 29\n                            }, this)\n                        }, void 0, false);\n                    })(),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"hr\", {\n                        className: \"border-[#00e0ff] shadow-[0_0_20px_#00e0ff]\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                        lineNumber: 424,\n                        columnNumber: 17\n                    }, this),\n                    !isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-black border-2 border-[#00e0ff] shadow-[0_0_20px_#00e0ff]  text-[#00e0ff] p-4 rounded-md w-1/2 min-h-[150px]\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"font-semibold block mb-2 text-lg transition duration-200\\n                            \".concat(hoveredDirection === \"across\" ? \"text-[#ffaa33] drop-shadow-[0_0_10px_#ffaa33]\" : \"text-white drop-shadow-[0_0_10px_white]\"),\n                                        children: t.across\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                        lineNumber: 430,\n                                        columnNumber: 29\n                                    }, this),\n                                    placedWords.filter((entry)=>entry.direction === \"across\").sort((a, b)=>a.clueNumber - b.clueNumber).map((entry, idx)=>{\n                                        const qna = qnaList[entry.index];\n                                        if (!qna) return null;\n                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            onClick: ()=>{\n                                                setHoveredClueNumber(entry.clueNumber);\n                                                setHoveredDirection(entry.direction);\n                                                setHoverRow(entry.start.row);\n                                                setHoverCol(entry.start.col);\n                                            },\n                                            className: \"mb-2 text-lg transition duration-200 cursor-pointer \\n                                         \".concat(hoveredClueNumber === entry.clueNumber && hoveredDirection === entry.direction ? \"text-[#ff7700] drop-shadow-[0_0_8px_#ff7700] font-bold\" : \"\"),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                    children: [\n                                                        entry.clueNumber,\n                                                        \".\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                                    lineNumber: 455,\n                                                    columnNumber: 45\n                                                }, this),\n                                                \" \",\n                                                qna.question\n                                            ]\n                                        }, idx, true, {\n                                            fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                            lineNumber: 442,\n                                            columnNumber: 41\n                                        }, this);\n                                    })\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                lineNumber: 429,\n                                columnNumber: 25\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-black border-2 border-[#00e0ff] shadow-[0_0_20px_#00e0ff] text-[#00e0ff] p-4 rounded-md w-1/2 min-h-[150px]\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"font-semibold block mb-2 text-lg transition duration-200\\n                            \".concat(hoveredDirection === \"down\" ? \"text-[#ffaa33] drop-shadow-[0_0_10px_#ffaa33]\" : \"text-white drop-shadow-[0_0_10px_white]\"),\n                                        children: t.down\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                        lineNumber: 464,\n                                        columnNumber: 29\n                                    }, this),\n                                    placedWords.filter((entry)=>entry.direction === \"down\").sort((a, b)=>a.clueNumber - b.clueNumber).map((entry, idx)=>{\n                                        const qna = qnaList[entry.index];\n                                        if (!qna) return null;\n                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            onClick: ()=>{\n                                                setHoveredClueNumber(entry.clueNumber);\n                                                setHoveredDirection(entry.direction);\n                                                setHoverRow(entry.start.row);\n                                                setHoverCol(entry.start.col);\n                                            },\n                                            className: \"mb-2 text-lg transition duration-200 cursor-pointer \\n                                                      \".concat(hoveredClueNumber === entry.clueNumber && hoveredDirection === entry.direction ? \"text-[#ff7700] drop-shadow-[0_0_8px_#ff7700] font-bold\" : \"\"),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                    children: [\n                                                        entry.clueNumber,\n                                                        \".\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                                    lineNumber: 489,\n                                                    columnNumber: 45\n                                                }, this),\n                                                \" \",\n                                                qna.question\n                                            ]\n                                        }, idx, true, {\n                                            fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                            lineNumber: 476,\n                                            columnNumber: 41\n                                        }, this);\n                                    })\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                                lineNumber: 463,\n                                columnNumber: 25\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                        lineNumber: 428,\n                        columnNumber: 21\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                lineNumber: 184,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: ()=>checkAnswers(),\n                className: \"mt-4 px-6 py-2 rounded border border-white text-white transition duration-300    hover:bg-white hover:text-black shadow-md hover:shadow-[0_0_12px_white]\",\n                children: t.checkanswer\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n                lineNumber: 498,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\anhvo\\\\Desktop\\\\HippoCampus\\\\frontend\\\\app\\\\Crossword\\\\crosswordpage.jsx\",\n        lineNumber: 166,\n        columnNumber: 9\n    }, this);\n}\n_s(CrosswordPuzzlePage, \"5n2nW2zRD/YCXorp9yOkciBwlCQ=\");\n_c = CrosswordPuzzlePage;\nvar _c;\n$RefreshReg$(_c, \"CrosswordPuzzlePage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/Crossword/crosswordpage.jsx\n"));

/***/ })

});